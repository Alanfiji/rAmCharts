% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/amPlot.R
\name{amLines}
\alias{amLines}
\title{Add chart graph.}
\usage{
amLines(chart, x, type, col, title)
}
\arguments{
\item{chart}{\linkS4class{AmChart}.}

\item{x}{\code{numeric}.}

\item{type}{(optionnal) \code{character}.}

\item{col}{\code{character}, color of teh new serie.}

\item{title}{\code{character} used when legend is enabled.}
}
\description{
Add chart graph.
}
\examples{
library(pipeR)
library(rAmCharts)
library(data.table)

# ----------------
# EXAMPLES NUMERIC
# ----------------

# ---
# x, y plot
# ---

x <- sort(rnorm(100))
y <- rnorm(100, sd = 10)

# change type
amPlot(x = x, y = y) # default type = "p"
amPlot(x = x, y = y, type = "l")

# add a legend
library(pipeR)
amPlot(x = x, y = y, type = "l") \%>>\%
  setLegend(useGraphSettings = TRUE)

# add a scrollbar
amPlot(x = x, y = y, scrollbar = TRUE)
amPlot(x = x, y = y, scrollbar = TRUE, hideYScrollbar = FALSE)

# change lty
amPlot(x = x, y = y, type = "l", lty = 2)

# add weight
weights <- rnorm(100, sd = 5)
amPlot(x = x, y = y, type = "p", weights = weights)

# change cex
amPlot(x = x, y = y, type = "p", cex = 1)
amPlot(x = x, y = y, type = "p", cex = 10)

# add title
amPlot(x = x, y = y, main = "title")

# change color
amPlot(x = x, y = y, col = "blue")

col <- factor(c(rep(1,25), rep(2,50), rep(3,25)))
amPlot(x = x, y = y, col = col)

# ---
# x plot
# ---
x <- rnorm(100)

# simple scatter plot
amPlot(x = x)

# add title
amPlot(x = x, main = "Title")

# set a title
amPlot(x = x, main = "Title")

# change type (set to "p" by default)
amPlot(x = x, type = "l")
amPlot(x = x, type = "sl")
amPlot(x = x, type = "st")
amPlot(x = x, type = "p")
amPlot(x = x, type = "b")

# change color
amPlot(x = rnorm(100), col = "lightblue")

# disable the cursor
amPlot(x = rnorm(100), cursor = FALSE)

# allow scrollbar
amPlot(x = rnorm(100), scrollbar = TRUE)

# change bullets
x <- rnorm(100)
amPlot(x = x, bullet = "diamond")
amPlot(x = x, bullet = "square")
amPlot(x = x, bullet = "triangleUp")
amPlot(x = x, bullet = "triangleDown")
amPlot(x = x, bullet = "triangleLeft")
amPlot(x = x, bullet = "triangleRight")
amPlot(x = x, bullet = "bubble")
amPlot(x = x, bullet = "yError", error = sample(100))
amPlot(x = x, bullet = "xError", error = sample(100))

# change lty
x <- rnorm(100)
amPlot(x = x, type = "b", lty = 1)
amPlot(x = x, type = "b", lty = 6)

# change cex
x <- rnorm(100)
amPlot(x = x, cex = 1)
amPlot(x = x, cex = 10)

# change lwd
x <- rnorm(100)
amPlot(x = x, type = "st", lwd = 1)
amPlot(x = x, type = "st", lwd = 2)

# -------------------
# EXAMPLES DATA.FRAME
# -------------------

iris <- data.table(get("iris", "package:datasets"))

# select the column to plot with a character or a numeric
amPlot(iris, columns = "Sepal.Length")
amPlot(iris, columns = 1)

# select several columns
amPlot(iris, col = colnames(iris)[1:2], type = c("l", "st"))

# add a legend 
library(pipeR)
amPlot(iris, col = colnames(iris)[1:2], type = c("l", "st")) \%>>\%
  setLegend(useGraphSettings = TRUE)

amPlot(iris)

co2 <- data.table(get("CO2", "package:datasets"))
amPlot(co2)

# -------------------
# ADD OTHER SERIE(S)
# -------------------

# For a simple chart
amPlot(x = rnorm(100), type = 'sl') \%>>\%
  amLines(x = rnorm(100), type = "p")

amPlot(x = rnorm(100), type = 'sl') \%>>\%
  amLines(x = rnorm(100), col = "blue") \%>>\%
  amLines(x = rnorm(100), type = "sl") \%>>\%
  amLines(x = rnorm(100), type = "p")

# For an XY chart
x <- sort(rnorm(100))
y1 <- rnorm(100, sd = 10)
y2 <- rnorm(100, sd = 10)
y3 <- rnorm(100, sd = 10)
amPlot(x = x, y = y1) \%>>\%
  amLines(x = y2, col = "blue") \%>>\%
  amLines(x = y3, type = "p")


# -------------------
# FORMULA
# -------------------
iris <- data.table(get("iris", "package:datasets"))

amPlot(x = iris$Sepal.Length, y = iris$Sepal.Width, xlab = "Sepal.Length")
amPlot(Sepal.Length~Sepal.Width, data = iris)
amPlot(Petal.Length + Sepal.Length ~ Sepal.Width, data = iris) \%>>\%
  setLegend(useGraphSettings = TRUE)
}

