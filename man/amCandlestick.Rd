% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amCandlestick.R
\name{amCandlestick}
\alias{amCandlestick}
\title{Plotting candlestick chart using rAmCharts}
\usage{
amCandlestick(data, xlab = "", ylab = "", horiz = FALSE,
  labelRotation = 45, positiveColor = "#7f8da9",
  negativeColor = "#db4c3c", names = c("low", "open", "close", "high"),
  dataDateFormat = NULL, minPeriod = ifelse(!is.null(dataDateFormat), "DD",
  ""))
}
\arguments{
\item{data}{\code{data.frame} dataframe with at least 5 columns : 
category, open (numeric), close (numeric), low (numeric),
high (numeric).}

\item{xlab}{\code{character} label for x-axis.}

\item{ylab}{\code{character} label for y-axis.}

\item{horiz}{\code{boolean} TRUE for an horizontal chart, FALSE for a vertical one}

\item{labelRotation}{\code{numeric} Rotation angle of a label. Only horizontal axis' values can be rotated.
If you set this for vertical axis, the setting will be ignored. Possible values from -90 to 90.}

\item{positiveColor}{\code{character} color for positive values. 
Must be in hexadecimal if you plan to export the chart.}

\item{negativeColor}{\code{character} color for negative values (in hexadecimal).}

\item{names}{\code{character}, names for the tooltip.}

\item{dataDateFormat}{\code{character}, default 'NULL'. Even if your chart parses dates,
you can pass them as strings in your data - 
all you need to do is to set data date format and the chart will parse dates to date objects.
Check this page for available formats.
Please note that two-digit years (YY) as well as literal month names (MMM)  are NOT supported in this setting.}

\item{minPeriod}{\code{character} minPeriod Specifies the shortest period of your data.
This should be set only if dataDateFormat is not 'NULL'.
Possible period values:
fff - milliseconds, ss - seconds, mm - minutes, hh - hours, DD - days, MM - months, YYYY - years.
It's also possible to supply a number for increments, i.e. '15mm'
which will instruct the chart that your data is supplied in 15 minute increments.}
}
\description{
amCandlestick computes a candlestick chart of the given value.
}
\examples{
# Basic example
set.seed(9)
category <- c("2015-01-01", "2015-01-02", "2015-01-03", "2015-01-04",
              "2015-01-05", "2015-01-06", "2015-01-07", "2015-01-08",
              "2015-01-09", "2015-01-10", "2015-01-11", "2015-01-12", "2015-01-20")
low <- rnorm(n = length(category) - 1, mean = 130, sd = 10)
open <- low + rnorm(n = length(category) - 1, mean = 4)
close <- open + rnorm(n = length(category) - 1, mean = 2)
high <- close + rnorm(n = length(category) - 1, mean = 4)

data_candle <- data.frame(category = category, open = c(open, 136.65),
                          close = c(close, 136.4), low = c(low, 134.45), high = c(high, 137.5),
                          stringsAsFactors = FALSE)

amCandlestick(data = data_candle)

# change colors
amCandlestick(data = data_candle, positiveColor = "black", negativeColor = "green")

# naming the axes
amCandlestick(data = data_candle, xlab = "values", ylab = "categories")

# Rotate the labels for x axis
amCandlestick(data = data_candle, labelRotation = 90)

# change names
amCandlestick(data = data_candle, names = c("min", "begin", "end", "max"))

#Horizontal chart :
amCandlestick(data = data_candle, dataDateFormat = "YYYY-MM-DD", horiz = TRUE)

#  Parse date              
amCandlestick(data = data_candle, dataDateFormat = "YYYY-MM-DD")

# datas over months
data_candle$category <- c("2015-01-01", "2015-02-01", "2015-03-01",
                          "2015-04-01", "2015-05-01", "2015-06-01",
                          "2015-07-01", "2015-08-01", "2015-09-01",
                          "2015-10-01", "2015-11-01", "2015-12-01", "2016-01-01")

amCandlestick(data = data_candle, dataDateFormat = "YYYY-MM-DD", minPeriod = "MM")

}

